운영체제
공통적으로 하드웨어를 제어하고 공통적으로 관리할수 있는 것이 필요하다고 느껴서 만들게됨.
=하드웨어에 따른 커스터마이징
우리가 사용해야할 소스를 사용하는 공간이기에 중요한 부분이기도 하다.

*역할
하드웨어관리, 시스템서비스제공, 자원관리
1. 응용소프트웨어가 잘못 작동할때 OS가 제어를 한다. (하드웨어 문제일 때)
2.
3. 여러사용자간에 효율적 할당, 관리, 보호 ( '한정된 자원으로 얼마나 사용할 수 있는가'를 관리) 
 **자원관리 보충**
프로세스: 보조기억장치(하드)에 있는 프로그램을 깨워서 메모리로 불러들여 주기억장치에 있는 상태.'살아있는 프로그램'

------------운영체제의 관리기법(프로세스 관리)------------
FCFS
도착한 순서대로 차례로 CPU를 할당
SJF(short job first)
실행시간이 가장 짧은 프로세스 먼저 할당
단:실행시간을 예측하는 연산이 어렵고, 실행시간이 긴 프로세르를 무한 연기상태 발생가능
RoundRobinScheduling
시간 할당량 동안만 실행/완료되지 않아도 시간이 지나면 맨 뒤로가서 대기
단: 제한시간 할당에 따른 스위칭도 하나의 일이기 때문에 오버헤드가 자주 발생
Priorty Based Scheduling
우선순위를 부여.
단: 가장 낮은 순위를 부여받은 프로세스는 무한 연기 발생.
Multi Queue Scheduling
그룹으로 분류. 대기열을 만들어서 준비상태 큐 마다 다른 스케줄링 기법을 사용.
단: 다른 준비상태 큐로 이동불가

(대표적인 예 : Win 작업관리자, OS 활성상태보기

------------------주 기억장치 관리---------------------

단순관리

가상메모리

-----------------파일관리-----------------
응용프로그램   <->   운영체제   <->   보조기억장치
            입출력요청    파일 입출력처리
테이블을 만들고 파일을 관리하는 역할을 한다.
그래서 예전엔 운영체제마다 테이블을 처리하는 방식이 달라서 호환 프로그램을 설치하지않으면 안됐으나, 최근에는 지원을 많이 해준다.
------------------------------------------

커널(운영체제가 가지고있다)
중추적인 역할. 운영체제의 핵심, 운영체제의 정체성. 자원관리, 보안, 추상화
-----------------------------------------------------------------------------

**음악파일을 실행하는 예**
KEYWORD : 사용자, CPU, APP, 입력, 출력, HDD, MEM, 운영체제(OS)

사용자가 입력장치를 통해서 클릭을 하면OS가 인식하고 그것을 APP에 보낸다. 
APP은 음악파일을 다시 OS에게 요청.
OS는 HDD에서 가져다 MEM에 올려준다. APP에게 다시 알려준다.
APP은 다시 운영체제한테 음악파일을 재생을 요청하고 OS는 출력장치에 보낸다.

------------------------------------------------------------------------------
-유닉스 토발즈

-유닉스 다음 리눅스(배낌)

유닉스- mac os
Linux- android, centOS, Fedora













Perfect balance를 설정하고 '운'을통해 balance를 파괴한다.
Life Iventory 인생도서관

https://github.com/ssongmo
blog.naver.com/heosongmoo